app.get 是我们添加路由的方法。

app.use 是Express 添加中间件的一种方法。
现在你可以把它看作处理所有没有路由匹配路径的处理器

QA质量保证
测试
测试框架，这里用的是Mocha
npm install --save-dev mocha
cp node_modules/mocha/mocha.js public/vendor
cp node_modules/mocha/mocha.css public/vendor

测试通常需要一个assert（或expect）函数用chai
npm install --save-dev chai
cp node_modules/chai/chai.js public/vendor

持续集成 CI

请求体
如果POST 默认为application/x-wwwform-urlencoded，请求需要支持文件上传，则媒体类型是multipart/form-data。最后是AJAX 请求，它可以使用application/json。

局部文件partials
引用天气插件

使用POST（推荐使用的），需要引入中间件来解析URL 编码体。首先，安装body-parser
中间件（npm install --save body-parser），然后引入：app.use(require('body-parser')());

jQuery 上传包，安装jquery-file-upload-middleware 包（npm install--save jquery-file-upload-middleware），


cookie与会话
cookie需要先引入中间件cookie-parser。首先npminstall --save cookie-parser
app.use(require('cookie-parser')(credentials.cookieSecret));

安装express-session（npm install --save express-session）。 然后， 在链入
cookie-parser 之后链入express-session：
app.use(require('cookie-parser')(credentials.cookieSecret));
app.use(require('express-session')());

name: 设置cookie中，保存session的字段名称，默认为connect.sid
store: session的存储方式，默认为存放在内存中，我们可以自定义redis等
genid: 生成一个新的session_id时，默认为使用uid2这个npm包
rolling: 每个请求都重新设置一个cookie，默认为false
resave: 即使session没有被修改，也保存session值，默认为true
saveUninitialized：强制未初始化的session保存到数据库
secret: 通过设置的secret字符串，来计算hash值并放在cookie中，使产生的signedCookie防篡改
cookie : 设置存放sessionid的cookie的相关选项

邮箱：kqpkppucbnnxbahb
安装Nodemailer 包：npm install --save nodemailer

添加mongodb数据库插件
npm install --save mongoose
启动mongodb   mongod.exe --dbpath=D:\mongoDB\data
进入db 打开另一个输入：  mongo    或访问http://localhost:27017

组织路由原则
1.给路由处理器用命名函数
2.路由不应该神秘
3.路由组织应该是可扩展的
4.不要忽视自动化的基于视图的路由处理器

在模块中声明路由
建立routes.js文件，放置路由

jQuery 遍历 - map() 方法
js  遍历 for (var key in obj) {}

js声明严格模式"use strict";
js  Object的hasOwnProperty()方法返回一个布尔值，判断对象是否包含特定的自身（非继承）属性。


git

git status  git add -A    git commit -m "aaa"    $ git push -u origin master